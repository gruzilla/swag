«IMPORT metamodel»

«EXTENSION template::GeneratorExtensions»

«DEFINE OneToOne(Relation rel) FOR Entity»
		«IF rel.isOwner(this)»
			@«rel.metaType.toString().split(":").last()»(optional=«rel.optional»)
			«EXPAND relationGetter(rel)»
			«EXPAND relationSetter(rel)»
		«ELSE»
			«IF rel.unidirectional == false»
				@«rel.metaType.toString().split(":").last()» (mappedBy = "«(rel.name == null ? rel.otherPartner(this).name.toFirstLower() : rel.name + rel.otherPartner(this).name.toFirstUpper())»")
				«EXPAND relationGetter(rel)»
				«EXPAND relationSetter(rel)»
			«ENDIF»
		«ENDIF»«ENDDEFINE»
		
«DEFINE relationAttribute(Relation rel) FOR Entity»
	«IF rel.isOwner(this) || rel.unidirectional == false»
		private «rel.partner(this).name» «rel.attribute(this)»;
	«ENDIF»
«ENDDEFINE»

«DEFINE relationGetter(Relation rel) FOR Entity»
	public «rel.partner(this).name» «rel.getter(this)»() {
		return «rel.attribute(this)»;
	}«ENDDEFINE»

«DEFINE relationSetter(Relation rel) FOR Entity»
	public void «rel.setter(this)» («rel.partner(this).name» var«rel.partner(this).name») {
		«rel.attribute(this)» = var«rel.partner(this).name»;
	}«ENDDEFINE»

«DEFINE relationEquals(Relation rel) FOR Entity»
	«IF rel.isOwner(this) || rel.unidirectional == false»
		if (!«rel.attribute(this)».equals(other.«rel.attribute(this)»)) return false;
	«ENDIF»
«ENDDEFINE»

«DEFINE relationHash(Relation rel) FOR Entity»
	«IF rel.isOwner(this) || rel.unidirectional == false»
		result = prime * result + ((«rel.attribute(this)» == null) ? 0 : «rel.attribute(this)».hashCode());
	«ENDIF»
«ENDDEFINE»
«IMPORT metamodel»

«EXTENSION template::GeneratorExtensions»

«DEFINE ManyToMany(Relation rel) FOR Entity»
	«IF rel.associates == null»
		«IF rel.isOwner(this)»
		@«rel.metaType.toString().split(":").last()»
		@JoinTable(name="«rel.owner.name»_«rel.slave.name»_association")
		«ELSEIF rel.unidirectional == false»
		@«rel.metaType.toString().split(":").last()» (mappedBy = "«rel.ownerAttribute()»Set")
		«ENDIF»
	«ELSE»
		«EXPAND AssociationEntity::associate(rel.associates)»
		«IF rel.isOwner(this)»
			@OneToMany (mappedBy = "«rel.slaveAttribute()»")
		«ELSE»
			@OneToMany (mappedBy = "«rel.ownerAttribute()»")
		«ENDIF»
	«ENDIF»
	«EXPAND relationGetter(rel)» 
	«EXPAND relationSetter(rel)» «ENDDEFINE»

«DEFINE relationAttribute(Relation rel) FOR Entity»
	«IF rel.associates == null»
	private Set<«rel.partner(this).name»> «rel.attribute(this)»Set;
	«ELSE»
	private Set<«rel.associates.name»> «rel.attribute(this)»Set;
	«ENDIF»
«ENDDEFINE»

«DEFINE relationGetter(Relation rel) FOR Entity»
	«IF rel.associates == null»
	public Set<«rel.partner(this).name»> «rel.getter(this)»Set() {
	«ELSE»
	public Set<«rel.associates.name»> «rel.getter(this)»Set() {
	«ENDIF»
		return «rel.attribute(this)»Set;
	}«ENDDEFINE»

«DEFINE relationSetter(Relation rel) FOR Entity»
	«IF rel.associates == null»
	public void «rel.setter(this)»Set (Set<«rel.partner(this).name»> var«rel.partner(this).name») {
	«ELSE»
	public void «rel.setter(this)»Set (Set<«rel.associates.name»> var«rel.partner(this).name») {
	«ENDIF»
		«rel.attribute(this)»Set = var«rel.partner(this).name»;
	}«ENDDEFINE»
	
«DEFINE relationEquals(Relation rel) FOR Entity»
	if (!«rel.attribute(this)»Set.equals(other.«rel.attribute(this)»Set)) return false;
«ENDDEFINE»

«DEFINE relationHash(Relation rel) FOR Entity»
	result = prime * result + ((«rel.attribute(this)»Set == null) ? 0 : «rel.attribute(this)»Set.hashCode());
«ENDDEFINE»